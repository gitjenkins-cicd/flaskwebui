pipeline {
    agent any
    	      
        stages {
            stage('Parameters'){
                steps {
                    script {
                    properties(
		       [
                            parameters(
			        string(name: 'taurusinputymlfile', defaultValue: '' , description: 'please provide valid yml file');
			    [
                                [$class: 'ChoiceParameter', 
                                    choiceType: 'PT_SINGLE_SELECT', 
                                    description: 'Select the Project from the Dropdown List', 
                                    filterLength: 1, 
                                    filterable: false, 
                                    name: 'Projectid', 
                                    script: [
                                        $class: 'GroovyScript', 
                                        fallbackScript: [
                                            classpath: [], 
                                            sandbox: true, 
                                            script: 
                                                "return['Could not get The Project Details']"
                                        ], 
                                        script: [
                                            classpath: [], 
                                            sandbox: true, 
                                            script: 
                                                "return['Autobotnpe','Acronpe','Datafabric']"
                                        ]
                                    ]
                                ],
                                [$class: 'CascadeChoiceParameter', 
                                    choiceType: 'PT_SINGLE_SELECT', 
                                    description: 'Select the BQ Table details from the Dropdown List',
                                    name: 'BQTable', 
                                    referencedParameters: 'Projectid', 
                                    script: 
                                        [$class: 'GroovyScript', 
                                        fallbackScript: [
                                                classpath: [], 
                                                sandbox: true, 
                                                script: "return['Could not get Environment from Projectid Param']"
                                                ], 
                                        script: [
                                                classpath: [], 
                                                sandbox: true, 
                                                script: '''
                                                if (Projectid.equals("Autobotnpe")){
                                                    return["Autobotmetrics", "Autobotmetricserror"]
                                                }
                                                else if(Projectid.equals("Acronpe")){
                                                    return["Acrometrics", "Acrometricserror"]
                                                }
                                                else if(Projectid.equals("Datafabric")){
                                                    return["Datafabricmetrics", "DataFabricerror"]
                                                }
                                                '''
                                            ] 
                                    ]
                                ]
                                
                            ])
			    
                        ])
			
                    }
                }
            }
			
			stage('BQ Test'){
                steps {
                    script {
					   echo "project and table details are: ${Projectid},${BQTable}" 
					}
				}
			}
        }   
}
